#!/usr/bin/env perl

BEGIN {

    die 'You must set the CONTEXT_ROOT variable before starting Context.'
      and exit 1 unless exists $ENV{CONTEXT_ROOT};
};

use 5.018_000;
use strict;
use warnings;

our $ROOT = $ENV{CONTEXT_ROOT};
chdir $ROOT;

use local::lib $ENV{CONTEXT_ROOT};

use Mojolicious::Lite;
use Mojo::Util;
use Mojo::JSON;

plugin 'JSONConfig' => {file => 'context.config'};

any '/' => sub {

    my $self = shift;
    
    my $redirect = app->config->{content}->{views}->{app->config->{content}->{views}->{enabled}[0]}->{url};
    return $self->redirect_to($redirect);
};

### Context Views

my $index = 0;

for my $view (@{app->config->{content}->{views}->{enabled}}) {
    if (exists app->config->{content}->{views}->{$view}) {

        ## Views
        
        get app->config->{content}->{views}->{$view}->{url} => sub {
            my $self = shift;
            
            #$self->db->SELECT($index);
            #$self->db->PING();
            #$self->render( json => {} );
        };

        post app->config->{content}->{views}->{$view}->{url} => sub {
            my $self = shift;

            #$self->db->SELECT($index);
            #$self->db->PING();
        };

        put app->config->{content}->{views}->{$view}->{url} => sub {
            my $self = shift;

            #$self->db->SELECT($index);
            #$self->db->PING();
        };

        del app->config->{content}->{views}->{$view}->{url} => sub {
            my $self = shift;

            #$self->db->SELECT($index);
            #$self->db->PING();
        };
        
    $index++;
    
    }
}

### Context Start

sub startup {
  
  my $self = shift;
}

app->start();
